// 깊은 것을 우선적으로 탐색(DFS, Depth First Search)
// 모든 정점을 방문하고 싶을 때 사용
// 스택 또는 재귀함수(스택의 원리)를 사용

int c[number]; //방문처리를 위한 배열
vector <int> a[number + 1]; //인덱스 시작 1

void dfs(int x) { //스택없이 
	if (c[x]) return;
	c[x] = true;
	cout << x;
	for (int i = 0; i < a[x].size(); i++) {
		int y = a[x][i];
		dfs(y) //재귀함수를 이용(스택의 원리) 
	}
}
int main(void) {
	a[1].push_back(2); //노드의 연결 상태대로
	a[2].push_back(1);
	a[1].push_back(3); 
	a[3].push_back(1);

	a[2].push_back(3); 
	a[3].push_back(2);
	a[2].push_back(4);
	a[4].push_back(2);
	a[2].push_back(5);
	a[5].push_back(2); //이외에도 노드 연결

	dfs(1); //시작노드부터
	return 0;
}
