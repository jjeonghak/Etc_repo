# Robert C.Martin의 객체 설계의 기본 원칙
# SOLID
1. 단일 책임 원칙(Single Responsibility Principle)
   모든 클래스는 단 한가지의 책임만을 갖고, 클래스 안에 정의되어 있는 모든 기능은 이 하나의 책임을
   수행하는데 집중되어 있어야 한다.
   단일 책임 원칙은 같이 수정해야될 것들은 묶고, 다로 수정해야될 것들은 분리하는 것
   신 객체(God object) 예방
   
2. 개방 폐쇄 원칙(Opne-Closed Principle)
   클래스는 확장에 열려 있어야 하며, 수정에는 닫혀 있어야 한다.
   프로그램의 기존 기능을 확장할 수 있어야 하고 기존코드의 변경은 없어야 한다.

3. 리스코프 치환 원칙(Liskov Substitution Principle)
   부모 클래스의 인스턴스를 사용하는 위치에 자식 클래스의 인스턴스를 대신 사용해도 코드가 원래 의도로
   작동해야 한다.
   # 리스코프 치환 원칙 위반 사항
    1) 자식 클래스가 부모 클랫의 변수 타입을 변경하거나 메소드의 파라미터, 리턴값의 타입, 갯수 변경
    2) 자식 클래스가 부모 클래스의 의도와 다르게 메소드를 오버라이딩 하는 경우(후에 )
   
4. 인터페이스 분리 원칙(Interface Segregation Principle)
   인터페이스 : 추상 클래스 중 추상 메소드만 존재하고 일반 메소드는 존재하지 않는 것
   클래스가 사용하지 않을 메소드에 의존할 것을 강요, 메소드를 가지도록 강제하지 않는다.
   
5. 의존 관계 역전 원칙(Dependency Inversion Principle)
   상위 모듈은 하위 모듈의 구현 내용에 의존하면 안된다.
   상위 모듈과 하위 모듈 모두 추상화된 내용에 의존해야 한다.
