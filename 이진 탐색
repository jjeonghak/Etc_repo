Int Binary_Search(int le, int ri,int val) {
	int mid = (le + ri) / 2;
	if (le > ri) return 0; //값이 없음, 범위가 좁아지지만 le 혹은 ri는 고정되어 있음
	if (val > a[mid]) return Binary_Search (mid + 1, ri, val);
	else if (val < a[mid]) return Binary_Search (le, mid - 1, val);
	else return 1; //값이 존재
}

// Time Complexity Analysis(worst-case)
1. Basic Operation : the comparison of x with S[mid] //기본 단위 연산
2. Input Size : n, the number of items in the array //입력의 크기

  * 재귀식(재현식) 
  T(1) = 1 //한번의 비교로 끝남
  T(N) = T(N/2) + 1 //반으로 나눈 후 한번 비교
  
