// 최장 증가 부분 수열(LIS, Longest Increasing Subsequence)은 각 원소가 이전 원소보다 큰 부분 수열 중 가장 긴 부분수열

int arr[number]; //배열
int dp[number]; //이전 원소들 중 증가하는 원소갯수
int max = 0;
	for (int i = 0; i < n; i++) { 
		int min = 0;
		for (int j = 0; j < i; j++) {
			if (arr[i] > arr[j]) {
				if (min < dp[j]) min = dp[j];
			}
		}
		dp[i] = min + 1;
		if (max < dp[i]) max = dp[i];
	}
  
  // 최장 감소 부분 수열(LDS, Longest Decreasing Subsequence)은 각 원소가 이전 원소보다 작은 부분 수열 중 가장 긴 부분수열
  
  int arr[number]; //배열
int dp[number]; //이전 원소들 중 증가하는 원소갯수
int max = 0;
	for (int i = 0; i < n; i++) { 
		int min = 0;
		for (int j = 0; j < i; j++) {
			if (arr[i] < arr[j]) {
				if (min < dp[j]) min = dp[j];
			}
		}
		dp[i] = min + 1;
		if (max < dp[i]) max = dp[i];
	}
  
