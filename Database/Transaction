//트랜잭션
  autocommit 모드를 true에서 false로 전환하는 것


//트랜잭션 ACID
  원자성(Atomicity) : 트랜잭션 내에서 실행한 작업들은 모두 성공하거나 모두 실패
  일관성(Consistency) : 모든 트랜잭션은 일관성 있는 데이터베이스 상태를 유지(무결성 제약조건 만족)
  격리성(Isolation) : 동시에 실행되는 트랜잭션은 서로 영향을 미치지 않음
  지속성(Durability) : 트랜잭션을 성공적으로 완료하면 그 결과흫 항상 기록
  
  
//트랜잭션 격리 수준
  READ UNCOMMITED : 커밋되지 않은 읽기
  READ COMMITTED : 커밋된 읽기
  REPEATABLE READ : 반복 가능한 읽기
  SERIALIZABLE : 직렬화 가능


//DB rock - 수정
  세션이 트랜잭션을 시작하고 데이터를 수정하는 동안 커밋이나 롤백 전까지 다른 세션의 데이터 수정불가
  트랜잭션은 로우의 데이터를 수정하려면 먼저 해당 로우의 락을 획득해야 수정가능
  이미 로우의 락이 사용중이면 얻기위해 일정시간 대기(SET ROCK_TIMEOUT <milliseconds>)
  트랜잭션의 데이터 수정이 완료되고 커밋 또는 롤백되면 로우의 락을 반납


//DB rock - 조회
  일반적인 데이터를 조회하는 경우 락을 획득하지 않고 바로 조회가능
  조회하는 경우 락을 획득하려면 (SELECT FOR UPDATE) 쿼리문 사용
  세션이 데이터를 조회하는 시점에 락을 획득


//트랜잭션 적용
  1. 커넥션 유지를 위해 커넥션을 파라미터로 사용(getConnection() 호출금지)
  2. 커넥션 유지를 위해 커넥션 사용후 닫지않고 그대로 사용(close() 호출금지)



