// 객체 지향 프로그래밍(OOP, Object Oriented Programming)
프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 
상호작용을 통해 로직을 구성하는 프로그래밍 기법

// 장점
1. 데이터나 기능에 변화가 생기더라도, 관련된 객체만 수정
2. 의미있는 단위로 나누기 때문에 코드 이해와 재사용 용이
3. 전체가 완성되지 않아도 일부 기능 테스트 및 사용 가능
4. 클래스 단위 모듈화로 대형 프로젝트에 적합

// 단점
1. 코드를 나누고 설계하기 어려움
2. 객체가 많아 용량이 커질 우려발생
3. 처리속도 상대적으로 느림
4. 극도로 빠른 실행속도, 저장 장치나 성능이 제한적인 기기에 부적합

