// 객체란 변수들과 참고 자료들로 이루어진 소프트웨어 덩어리
// 이때 객체가 현실 세계에서의 존재하는 것들을 나타내기 위해 추상화(Abstraction) 과정필요
// 객체의 변수는 인스턴스 변수(Instance variable), 함수는 인스턴스 메소드(Instance method)
외부에서 어떠한 객체의 인스턴스 변수의 값을 변경하지 못하고 오직 객체의 인스턴스 함수를 통해서만 가능

struct s; //초기화 과정 생략
s.instanceVariable += 100; //1)불가능
s.increase_instanceVariable(100) //2)가능

1)은 외부에서 s라는 객체의 인스턴스 변수에 직접 접근하는 것이기 때문에 불가능한 것이고 2)는 s객체의 인스턴스 함수를 통해서 값을 수정하는 것
이와 같이 외부에서 직접 바꿀수 없고 항상 인스턴스 메소드를 이용해 간접적으로 조절하는 것을 갭슐화(Encapsulation)라고 한다.

// 클래스(Class)란 객체의 설계도
클래스 상의 변수와 함수는 멤버 변수(Member variable)와 멤버 함수(Member function)라고 부른다.

class class1 { //키워드를 설정하지 않으면 기본적으로 private로 설정
private: //멤버 변수, private : 아래의 것들은 객체내에서 보호되며 자기객체 내에서만 접근가능
	int memberVariable1; 
	char memberVariable2;

public: //멤버 함수, public : 외부에서 공개적으로 사용할 수 있음
	void memberFunction1(int _memberVariable1,char _memberVariable2){
		memberVariable1 = _memberVariable1;
		memberVariable2 = _memberVariable2;
	}
	void memberFunction2(int inc) {
		memberVariable1 += inc;
	}
	void memberFunction3() {
		cout << memberVariable1 << memberVariable2 << endl;
	}
};
