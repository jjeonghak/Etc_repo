// ifstream : input file stream
헤더파일 : <fstream>
파일 내부의 것들을 스트림 버퍼로 가지고 와서 프로그램에서 입력

1. open()
함수원형 : void open(const char* fileName, ios_base::openmode = ios_base::in);
         void open(const string& fileName, ios_base::openmode = ops_base::in);

//ios_base::in - 파일을 read할 목적으로 open할 것 
//ios_base::out - 파일에 write할 목적으로 open할 것
//ios_base::binary - 파일을 바이너리 형태로 open할 것

2. is_open() : 파일의 open 여부
함수원형 : bool is_open() const;


3. close() 
함수원형 : void close();

4. get() : 문자형 단위로 하나씩 파일에서 프로그램으로 읽어오는 함수
함수원형 : istream& get(char &c);

5. getline() : \n 단위로 파일에서 프로그램으로 읽어오는 함수
함수원형 : istream& getline(char* str, streamsize len);

6. eof() : 파일의 끝
함수원형 : bool eof() const;


// ofstream : output file stream
헤더파일 : <fstream>
프로그램의 출력을 파일에 입력

write() : 첫번째 매개변수로 받은 문자형 포인터 타입의 문자열을 n만큼 파일에 입력
함수원형 : ostream& write(const char* str, streamsize n);


