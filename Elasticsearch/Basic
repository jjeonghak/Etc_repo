//엘라스틱서치
  아파치 재단의 루씬 기반 오픈소스 검색엔진
  고차원적인 전문 검색(full text) 가능
  비정형 로그 데이터를 수집하고 키바나로 로그 시각화 가능
  정형화되지 않은 다양한 형태의 문서 자동 색인 및 검색 가능
  서로 상이한 인덱스라도 검색할 필드명만 동일하면 여러 개의 인덱스를 한번에 조회 가능(멀티테넌시)
  실시간이 아닌 색인된 데이터는 통상적으로 1초 뒤에 검색 가능
  트랜잭션과 롤백 기능 제공하지 않음
  데이터 업데이트를 제공하지 않음
  자바로 개발됐기 때문에 자바 런타임 필수


//검색 시스템 구성 요소
  1. 수집기
    웹사이트, 블로그, 카페 등 웹에서 필요한 정보를 수집하는 프로그램

  2. 스토리지
    데이터베이스에서 데이터를 저장하는 물리적인 저장소

  3. 색인기
    검색엔진이 수집한 정보에서 사용자 질의와 일치하는 정보를 찾기위해 가공하고 저장

  4. 검색기
    사용자 질의를 입력받아 색인기에서 저장한 역색인 구조에서 일치하는 문서를 찾아 결과로 반환


//RDBMS 비교
  데이터베이스 -> 인덱스
  파티션 -> 샤드
  테이블 -> 타입
  행 -> 문서
  열 -> 필드
  스키마 -> 매핑
  SQL -> Query DSL

  
// 기능 비교
  SELECT -> GET
  INSERT -> PUT
  UPDATE -> POST
  DELETE -> DELETE
  인덱스 정보 확인 -> HEAD


//yml 파일 설정
  cluster.name: 클러스터로 여러 노드를 하나로 묶음
  node.name: 노드명 지정, 지정하지 않는 경우 임의의 이름으로 자동 부여
  path.data: 인덱스 경로 지정, 기본적으로 하위의 data 디렉토리에 인덱스 생성
  path.logs: 노드와 클러스터에서 생성되는 로그를 저장, 기본 경로는 /path/to/lods
  path.repo: 인덱스 백업을 위한 스냅샷 경로
  network.host: 특정 IP만 접근가능하도록 설정
  http.port: 서버에 접근할 수 있는 http api 호출을 위한 포트 번호, 기본값 9200
  transport.tcp.port: 클라이언트가 접근할 수 있는 tcp 포트 번호, 기본값 9300
  discovery.zen.ping.unicast.hosts: 노드가 여러개인 경우 유니캐스트 활성화된 다른 서버를 찾음
  discovery.zen.minimum_master_nodes: 마스터 노드의 선출 기준이 되는 노드의 수 지정
  node.master: 마스터 노드로 동작 여부 지정
  node.data: 데이터 노드로 동작 여부 지정


//기본 용어
  1. 인덱스
    데이터 저장 곤간
    하나의 인덱스는 하나의 타입만 가지며 하나의 물리적인 노드에 여러 개의 논리적인 인덱스 생성 가능
    인덱스 생성시 기본적으로 5개의 프라이머리 샤드와 1개의 레플리카 샤드 세트 생성
    인덱스 이름은 모두 소문자여야 restful api 호출 가능

  2. 샤드
    색인된 문서는 하나의 인덱스에 담김
    인덱스 내부에 색인된 데이터는 물리적인 공간에 여러 개의 파티션으로 나누어 구성
    이 파티션이 샤드, 문서를 분산 저장함으로 데이터 손실 위험을 최소화

  3. 타입
    인덱스의 논리적 구조 의미
    6.0 버전 이하에서는 하나의 인덱스에 여러 타입 설정 가능
    6.1 버전 이후에서는 하나의 인덱스에 하나의 타입만 사용

  4. 문서
    데이터가 저장되는 최소 단위
    기본적으로 json 포맷으로 데이터 저장
    데이터베이스의 행과 유사
    중첩 구조 지원으로 문서 안에 문서 저장 가능
  
  5. 필드
    문서를 구성하기 위한 속성
    데이터베이스의 열과 유사
    좀 더 동적인 데이터 타입
    
  6. 매핑
    문서의 필드와 필드의 속성을 정의하고 그에 따른 색인 방법을 정의하는 프로세스
    인덱스 매핑 정보에는 여러가지 데이터 타입 지정 가능
    하지만 필드면 중복은 불가능


//노드의 종류
  1. 마스터 노드(Master Node)
    클러스터를 관리
    노드 추가와 제거 같은 클러스터의 전반적인 관리 담당
    인덱스를 생성 및 삭제하는 등 클러스터와 관련된 전반적인 작업을 담당
    네트워크 속도가 빠르고 지연이 없는 노드를 마스터 노드로 선정
    다수의 노드를 마스터 노드로 설정 가능하지만 하나의 노드만 마스터 노드로 선출되어 동작

    elasticsearch.yml 설정
      node.master: true
      node.data: false
      node.ingest: false
      search.remote.connect: false

  2. 데이터 노드(Data Node)
    실질적인 데이터를 저장
    검색과 통계 같은 데이터 관련 작업 수행
    분산 저장되는 물리적 공간인 샤드가 배치되는 노드
    색인 작업은 CPU, 메모리, 스토리지 같은 리소스를 소모하기에 모니터링 필수

    elasticsearch.yml 설정
      node.master: false
      node.data: true
      node.ingest: false
      search.remote.connect: false

  3. 코디네이팅 노드(Coordinating Node)
    사용자의 요청만 받아서 처리
    클러스터 관련 요청은 마스터 노드에 전달
    데이터 관련 요청은 데이터 노드에 전달
    들어온 요청을 단순히 라운드로빈 방식으로 분산

    elasticsearch.yml 설정
      node.master: false
      node.data: false
      node.ingest: false
      search.remote.connect: false
    

  4. 인제스트 노드(Ingest Node)
    색인전 문서의 전처리 작업 담당
    인덱스 생성 전 문서의 형식을 다양하게 변경

    elasticsearch.yml 설정
      node.master: false
      node.data: false
      node.ingest: true
      search.remote.connect: false


//전체 동작 구성
  하나의 엘라스틱서치 클러스터에 노드#1, 노드#2로 총 2개의 물리적 노드 존재
  인덱스 문서를 조회할 때 마스터 노드를 통해 2개의 노드를 모두 조회해서 각 데이터를 취합한 후 결과를 하나로 합처서 제공
  클러스터를 구성한 경우 클러스터 이름으로 각각을 구분
  일반적으로 프라이머리 샤드는 안전성을 위해 하나의 노드에 하나씩 분산 저장
  인덱스에 다수의 문서를 색인하게 되면 문서는 3개의 샤드로 골고루 분산 저장
  엘라스틱서치는 장애시 레플리카 샤드를 이용해 샤드를 복구
  장애 발생시 마스터 노드는 데이터를 재분배하거나 레플리카 샤드를 프라이머리 샤드로 승격
  



