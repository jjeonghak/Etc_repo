더 빠른 수행 시간 : 비트마스크 연산은 O(1)에 구현되는 것이 많기때문
더 간결한 코드 : 다양한 집합 연산들을 반복문 없이 한 줄에 쓸수 있기 때문에 짧은 코드 작성가능
더 작은 메모리 사용량 : 같은 데이터를 더 적은 메모리 사용
연관 배열을 배열로 대체 : 불린 값 배열을 키로 갖는 연관 배열 객체 map<vector<bool>,int>를 사용할 때 비트마스크를 사용하면 단순한 배열 int[] 사용가능

이진수의 한자리 = 비트(bit) 0 또는 1
a & b  두 정수 a,b를 비트별로 AND 연산 
a | b  두 정수 a,b를 비트별로 OR 연산
a ^ b  두 정수 a,b를 비트별로 XOR 연산
-a  정수 a의 비트별 NOT 연산
a << b  정수 a를 왼쪽으로 b비트 시프트
a >> b  정수 a를 오른쪽으로 b비트 시프트
