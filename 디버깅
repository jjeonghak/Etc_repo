 자주 하는 실수
 1) 산술 오버플로 : 변수의 표현 범위를 벗어나는 값 사용
 2) 배열 범위 밖 원소에 접근 : int array[10], t; 선언시 array[10]을 출력하면 t값 출력됨
 3) 일관되지 않은 범위 표현방식 사용 : 닫힌구간, 열린구간, 반열린구간 표현 통일해서 사용
 4) Off-by-one 오류 : 원소가 하나 많거나 적은 경우
 5) 컴파일러가 잡아주지 못하는 상수 오타
 6) 스택 오버플로 : 대게 재귀호출의 깊이가 너무 깊어져 발생, 지역변수로 선언한 배열이나 클래스 인스턴스가 스택 메모리 사용(전역변수 사용으로 방지)
 7) 다차원 배열 인덱스 순서변경
 8) 잘못된 비교 함수 작성
 9) 최대, 최소, 반례 처리불가
 10) 연산자 우선순위 표기실수
 11) 느린 입출력 방식 선택
 12) 변수 초기화 

디버깅(Debugging)
1. 작은 입력에 대해 제대로 실행되나 확인하기
2. 단정문(Assertion) 사용 : 주어진 조건이 거짓일 때 오류를 내고 프로그램 강제종료하는 함수
3. 프로그램 계산 중간값 출력하기
4. 스캐폴딩(Scaffolding) : 다른 코드를 개발할 때 뼈대를 잡기 위해 사용하는 임시 코드(수십만개의 입력을 자동화하여 테스트할 수 있는 코드)

실수형 비교시 오차
// 절대오차
bool absoluteEqual(double a, double b) { 
	return fabs(a - b) < 1e-10; //절댓값 변환함수
}
// 상대오차
bool relativeEqual(double a, double b) { 
	return fabs(a - b) <= 1e-8 * max(fabs(a), fabs(b)); //a와 b중 큰 수의 0.000001%까지 오차허용
}
// 절대오차와 상대오차
bool doubleEqual(double a, double b) {
	double diff = fabs(a - b);
	if (diff < 1e-10) return true;
	else return diff <= 1e-8 * max(fabs(a), fabs(b));
}
